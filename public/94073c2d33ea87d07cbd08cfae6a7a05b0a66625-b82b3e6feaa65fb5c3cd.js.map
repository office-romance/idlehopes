{"version":3,"sources":["webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/shopify-gid/dist/shopify-gid.es.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/core-js/modules/es6.array.last-index-of.js","webpack:///./node_modules/buffer/index.js"],"names":["toString","module","exports","Array","isArray","arr","call","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","len2","push","encodeChunk","lookup","join","Uint8Array","code","Error","indexOf","start","end","num","output","init","data","byteOffset","this","$trim","t","window","Buffer","from","atob","split","e","r","n","slice","reduce","type","id","params","raw","f","Object","keys","o","btoa","$export","P","fill","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toIObject","toInteger","toLength","$native","lastIndexOf","NEGATIVE_ZERO","F","searchElement","apply","arguments","O","index","min","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","obj","isBuffer","checked","copy","val","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst"],"mappings":"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","file":"94073c2d33ea87d07cbd08cfae6a7a05b0a66625-b82b3e6feaa65fb5c3cd.js","sourcesContent":["require(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","'use strict';\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\n\nfunction t(t) {\n  var i = (\"undefined\" == typeof window ? Buffer.from(t, \"base64\").toString(\"utf-8\") : atob(t)).split(\"shopify/\")[1].split(\"/\"),\n      e = i[0],\n      r = i[1],\n      n = (r.split(\"?\").slice(1)[0] || \"\").split(\"&\").reduce(function (t, i) {\n    var e = i.split(\"=\");\n    return t[e[0]] = e[1], t;\n  }, {});\n  return {\n    type: e,\n    id: r.split(\"?\")[0],\n    params: n,\n    raw: t\n  };\n}\n\nfunction i(t, i, e) {\n  void 0 === e && (e = {});\n  var r = \"gid://shopify/\" + t + \"/\" + i,\n      n = [],\n      f = Object.keys(e);\n\n  if (f.length > 0) {\n    for (var o = 0; o < f.length; o++) {\n      n.push(f[o] + \"=\" + e[f[o]]);\n    }\n\n    r += n = \"?\" + n.join(\"&\");\n  }\n\n  return \"undefined\" == typeof window ? Buffer.from(r, \"utf-8\").toString(\"base64\") : btoa(r);\n}\n\nexport { t as decode, i as encode };","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","'use strict';\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar $native = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n    // convert -0 to +0\n    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;\n    var O = toIObject(this);\n    var length = toLength(O.length);\n    var index = length - 1;\n    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));\n    if (index < 0) index = length + index;\n    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;\n    return -1;\n  }\n});\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}"],"sourceRoot":""}